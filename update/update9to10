#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
"""
Update from version 9 to version 10 of Yokadi DB
Add uuid fields to the Project and Task tables, then populate them.

@author: Aurélien Gâteau <mail@agateau.com>
@license: GPL v3 or later
"""
import sys

from uuid import uuid1

from sqlalchemy import create_engine


def addUuidColumn(conn, tableName):
    conn.execute("alter table {} add column uuid".format(tableName))
    for row in conn.execute("select id from {}".format(tableName)):
        id = row["id"]
        uuid = str(uuid1())
        conn.execute("update {} set uuid = ? where id = ?".format(tableName), uuid, id)


def addAliasTable(conn):
    conn.execute("""create table alias (
        uuid varchar not null,
        name varchar not null,
        command varchar not null,
        primary key(uuid),
        unique(uuid),
        unique(name)
    )""")


def migrateAliases(conn):
    rows = conn.execute("select value from config where name = 'ALIASES'")
    rows = list(rows)
    if not rows:
        return

    aliasesString = rows[0]["value"]
    try:
        aliases = eval(aliasesString)
    except Exception:
        # Failed to parse aliases
        print("Failed to parse v9 aliases: {}".format(aliasesString))
        return
    for name, command in aliases.items():
        uuid = str(uuid1())
        conn.execute("insert into alias(uuid, name, command) values(?, ?, ?)",
                uuid, name, command)

    conn.execute("delete from config where name = 'ALIASES'")


def main():
    uri = "sqlite:///" + sys.argv[1]
    engine = create_engine(uri)
    with engine.begin() as conn:
        addUuidColumn(conn, "project")
        addUuidColumn(conn, "task")
        addAliasTable(conn)
        migrateAliases(conn)


if __name__ == "__main__":
    main()
# vi: ts=4 sw=4 et
